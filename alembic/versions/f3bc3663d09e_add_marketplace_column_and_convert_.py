"""Add marketplace column and convert enums to TextEnum

Revision ID: f3bc3663d09e
Revises: d396bb092ebc
Create Date: 2025-08-28 01:40:09.966743

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "f3bc3663d09e"
down_revision: Union[str, None] = "d396bb092ebc"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "product",
        "product_type",
        existing_type=postgresql.ENUM("CARDS", "SEALED", name="producttype"),
        type_=sa.Text(),
        existing_nullable=False,
    )
    op.add_column(
        "sku_price_data_snapshot",
        sa.Column("marketplace", sa.Text(), nullable=False, server_default="tcgplayer"),
    )
    op.drop_index(
        op.f("ix_sku_price_snapshot_covering"), table_name="sku_price_data_snapshot"
    )

    # Update primary key to include marketplace
    op.drop_constraint(
        "sku_price_data_snapshot_pkey", "sku_price_data_snapshot", type_="primary"
    )
    op.create_primary_key(
        "sku_price_data_snapshot_pkey",
        "sku_price_data_snapshot",
        ["sku_id", "marketplace", "snapshot_datetime"],
    )

    op.create_index(
        "ix_sku_price_snapshot_covering",
        "sku_price_data_snapshot",
        [
            "sku_id",
            "marketplace",
            sa.literal_column("snapshot_datetime DESC"),
            "lowest_listing_price_total",
        ],
        unique=False,
    )
    op.alter_column(
        "transaction",
        "type",
        existing_type=postgresql.ENUM("PURCHASE", "SALE", name="transactiontype"),
        type_=sa.Text(),
        existing_nullable=False,
    )

    # Remove server default after adding marketplace column
    op.alter_column("sku_price_data_snapshot", "marketplace", server_default=None)

    # Drop the old unused enum types now that no columns reference them
    op.execute("DROP TYPE IF EXISTS transactiontype")
    op.execute("DROP TYPE IF EXISTS producttype")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Recreate the enum types before converting columns back (matching original database values)
    op.execute("CREATE TYPE transactiontype AS ENUM ('PURCHASE', 'SALE')")
    op.execute("CREATE TYPE producttype AS ENUM ('CARDS', 'SEALED')")

    op.alter_column(
        "transaction",
        "type",
        existing_type=sa.Text(),
        type_=postgresql.ENUM("PURCHASE", "SALE", name="transactiontype"),
        existing_nullable=False,
    )
    op.drop_index(
        "ix_sku_price_snapshot_covering", table_name="sku_price_data_snapshot"
    )

    # Restore original primary key without marketplace
    op.drop_constraint(
        "sku_price_data_snapshot_pkey", "sku_price_data_snapshot", type_="primary"
    )
    op.create_primary_key(
        "sku_price_data_snapshot_pkey",
        "sku_price_data_snapshot",
        ["sku_id", "snapshot_datetime"],
    )

    op.create_index(
        op.f("ix_sku_price_snapshot_covering"),
        "sku_price_data_snapshot",
        [
            "sku_id",
            sa.literal_column("snapshot_datetime DESC"),
            "lowest_listing_price_total",
        ],
        unique=False,
    )
    op.drop_column("sku_price_data_snapshot", "marketplace")
    op.alter_column(
        "product",
        "product_type",
        existing_type=sa.Text(),
        type_=postgresql.ENUM("CARDS", "SEALED", name="producttype"),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
