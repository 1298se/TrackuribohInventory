"""initial_base_schema

Revision ID: 92516477a264
Revises:
Create Date: 2025-07-20 02:04:35.511651

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "92516477a264"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "catalog",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("tcgplayer_id", sa.Integer(), nullable=False),
        sa.Column("modified_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("display_name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tcgplayer_id"),
    )
    op.create_table(
        "condition",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("tcgplayer_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("abbreviation", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tcgplayer_id"),
        sa.UniqueConstraint("tcgplayer_id", name="uq_condition_tcgplayer_id"),
    )
    op.create_index(op.f("ix_condition_name"), "condition", ["name"], unique=False)
    op.create_table(
        "inventory_snapshot",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("snapshot_date", sa.Date(), nullable=False),
        sa.Column("catalog_id", sa.Uuid(), nullable=False),
        sa.Column("total_cost", sa.Float(), nullable=False),
        sa.Column("total_market_value", sa.Float(), nullable=False),
        sa.Column("unrealised_profit", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "language",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("tcgplayer_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("abbreviation", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tcgplayer_id"),
        sa.UniqueConstraint("tcgplayer_id", name="uq_language_tcgplayer_id"),
    )
    op.create_index(op.f("ix_language_name"), "language", ["name"], unique=False)
    op.create_table(
        "platform",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "printing",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("tcgplayer_id", sa.Integer(), nullable=False),
        sa.Column("catalog_id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["catalog_id"],
            ["catalog.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "catalog_id", "tcgplayer_id", name="uq_printing_catalog_id_tcgplayer_id"
        ),
        sa.UniqueConstraint("tcgplayer_id"),
    )
    op.create_index(op.f("ix_printing_name"), "printing", ["name"], unique=False)
    op.create_table(
        "set",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("tcgplayer_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("release_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("catalog_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["catalog_id"],
            ["catalog.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tcgplayer_id"),
    )
    op.create_table(
        "transaction",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("date", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "type", sa.Enum("PURCHASE", "SALE", name="transactiontype"), nullable=False
        ),
        sa.Column("counterparty_name", sa.String(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column("platform_id", sa.Uuid(), nullable=True),
        sa.Column("platform_order_id", sa.String(), nullable=True),
        sa.Column("currency", sa.String(), server_default="USD", nullable=False),
        sa.Column(
            "shipping_cost_amount",
            sa.Numeric(scale=2),
            server_default="0",
            nullable=False,
        ),
        sa.Column(
            "tax_amount", sa.Numeric(scale=2), server_default="0", nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["platform_id"],
            ["platform.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "product",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("tcgplayer_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("clean_name", sa.String(), nullable=True),
        sa.Column("image_url", sa.String(), nullable=True),
        sa.Column("set_id", sa.Uuid(), nullable=False),
        sa.Column(
            "product_type",
            sa.Enum("CARDS", "SEALED", name="producttype"),
            nullable=False,
        ),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("rarity", sa.String(), nullable=True),
        sa.Column("number", sa.String(), nullable=True),
        sa.Column("set_name", sa.String(), nullable=True),
        sa.Column(
            "search_vector",
            postgresql.TSVECTOR(),
            sa.Computed(
                "to_tsvector('english', coalesce(name, '') || ' ' || coalesce(rarity, '') || ' ' || coalesce(number, '') || ' ' || coalesce(set_name, ''))",
                persisted=True,
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["set_id"],
            ["set.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tcgplayer_id"),
    )
    op.create_index(
        op.f("ix_product_clean_name"), "product", ["clean_name"], unique=False
    )
    op.create_index(op.f("ix_product_name"), "product", ["name"], unique=False)
    op.create_index(op.f("ix_product_number"), "product", ["number"], unique=False)
    op.create_index(op.f("ix_product_rarity"), "product", ["rarity"], unique=False)
    op.create_index(
        "ix_product_search_vector",
        "product",
        ["search_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(op.f("ix_product_set_name"), "product", ["set_name"], unique=False)
    op.create_table(
        "sku",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("tcgplayer_id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Uuid(), nullable=False),
        sa.Column("printing_id", sa.Uuid(), nullable=False),
        sa.Column("condition_id", sa.Uuid(), nullable=False),
        sa.Column("language_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["condition_id"],
            ["condition.id"],
        ),
        sa.ForeignKeyConstraint(
            ["language_id"],
            ["language.id"],
        ),
        sa.ForeignKeyConstraint(
            ["printing_id"],
            ["printing.id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tcgplayer_id"),
    )
    op.create_table(
        "line_item",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("sku_id", sa.Uuid(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("remaining_quantity", sa.Integer(), nullable=True),
        sa.Column("unit_price_amount", sa.Numeric(scale=2), nullable=False),
        sa.Column("transaction_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["sku_id"],
            ["sku.id"],
        ),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transaction.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "sku_price_data_snapshot",
        sa.Column("sku_id", sa.Uuid(), nullable=False),
        sa.Column("snapshot_datetime", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "lowest_listing_price_total",
            sa.Numeric(precision=10, scale=2),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["sku_id"],
            ["sku.id"],
        ),
        sa.PrimaryKeyConstraint("sku_id", "snapshot_datetime"),
    )
    op.create_index(
        "ix_sku_price_snapshot_covering",
        "sku_price_data_snapshot",
        [
            "sku_id",
            sa.literal_column("snapshot_datetime DESC"),
            "lowest_listing_price_total",
        ],
        unique=False,
    )
    op.create_table(
        "line_item_consumption",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("sale_line_item_id", sa.Uuid(), nullable=False),
        sa.Column("purchase_line_item_id", sa.Uuid(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["purchase_line_item_id"],
            ["line_item.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sale_line_item_id"],
            ["line_item.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("line_item_consumption")
    op.drop_index(
        "ix_sku_price_snapshot_covering", table_name="sku_price_data_snapshot"
    )
    op.drop_table("sku_price_data_snapshot")
    op.drop_table("line_item")
    op.drop_table("sku")
    op.drop_index(op.f("ix_product_set_name"), table_name="product")
    op.drop_index(
        "ix_product_search_vector", table_name="product", postgresql_using="gin"
    )
    op.drop_index(op.f("ix_product_rarity"), table_name="product")
    op.drop_index(op.f("ix_product_number"), table_name="product")
    op.drop_index(op.f("ix_product_name"), table_name="product")
    op.drop_index(op.f("ix_product_clean_name"), table_name="product")
    op.drop_table("product")
    op.drop_table("transaction")
    op.drop_table("set")
    op.drop_index(op.f("ix_printing_name"), table_name="printing")
    op.drop_table("printing")
    op.drop_table("platform")
    op.drop_index(op.f("ix_language_name"), table_name="language")
    op.drop_table("language")
    op.drop_table("inventory_snapshot")
    op.drop_index(op.f("ix_condition_name"), table_name="condition")
    op.drop_table("condition")
    op.drop_table("catalog")
    # ### end Alembic commands ###
