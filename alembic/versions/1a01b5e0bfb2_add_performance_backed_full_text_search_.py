"""add performance-backed full-text search columns to product

Revision ID: 1a01b5e0bfb2
Revises: de92764096d8
Create Date: 2025-05-14 02:35:13.561831

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "1a01b5e0bfb2"
down_revision: Union[str, None] = "de92764096d8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("product", sa.Column("rarity", sa.String(), nullable=True))
    op.add_column("product", sa.Column("number", sa.String(), nullable=True))
    op.add_column("product", sa.Column("set_name", sa.String(), nullable=True))
    op.add_column(
        "product",
        sa.Column(
            "search_vector",
            postgresql.TSVECTOR(),
            sa.Computed(
                "to_tsvector('english', coalesce(name, '') || ' ' || coalesce(rarity, '') || ' ' || coalesce(number, '') || ' ' || coalesce(set_name, ''))",
                persisted=True,
            ),
            nullable=False,
        ),
    )
    op.create_index(op.f("ix_product_number"), "product", ["number"], unique=False)
    op.create_index(op.f("ix_product_rarity"), "product", ["rarity"], unique=False)
    op.create_index(
        "ix_product_search_vector",
        "product",
        ["search_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(op.f("ix_product_set_name"), "product", ["set_name"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_product_set_name"), table_name="product")
    op.drop_index(
        "ix_product_search_vector", table_name="product", postgresql_using="gin"
    )
    op.drop_index(op.f("ix_product_rarity"), table_name="product")
    op.drop_index(op.f("ix_product_number"), table_name="product")
    op.drop_column("product", "search_vector")
    op.drop_column("product", "set_name")
    op.drop_column("product", "number")
    op.drop_column("product", "rarity")
    # ### end Alembic commands ###
